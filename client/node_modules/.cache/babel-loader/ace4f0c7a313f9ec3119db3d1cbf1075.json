{"ast":null,"code":"import axios from'axios';var baseUrl='/api/persons';var getAll=function getAll(){var request=axios.get(baseUrl);var nonExisting={id:10000,name:'This Person is not saved to server'};return request.then(function(response){return response.data.concat(nonExisting);});// return request.then(response => response.data)\n};var create=function create(newObject){var request=axios.post(baseUrl,newObject);return request.then(function(response){return response.data;});};var update=function update(id,newObject){var request=axios.put(\"\".concat(baseUrl,\"/\").concat(id),newObject);return request.then(function(response){return response.data;});};var remove=function remove(id){var request=axios.delete(\"\".concat(baseUrl,\"/\").concat(id));return request.then(function(response){return response.data;});};export default{getAll:getAll,create:create,update:update,remove:remove};","map":{"version":3,"sources":["C:/Users/Gal/Documents/GitHub/fullstackOpen3-Exercises/client/src/services/persons.js"],"names":["axios","baseUrl","getAll","request","get","nonExisting","id","name","then","response","data","concat","create","newObject","post","update","put","remove","delete"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,GAAMC,CAAAA,OAAO,CAAG,cAAhB,CAGA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACnB,GAAMC,CAAAA,OAAO,CAAGH,KAAK,CAACI,GAAN,CAAUH,OAAV,CAAhB,CACA,GAAMI,CAAAA,WAAW,CAAG,CAClBC,EAAE,CAAE,KADc,CAElBC,IAAI,CAAE,oCAFY,CAApB,CAIA,MAAOJ,CAAAA,OAAO,CAACK,IAAR,CAAa,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAT,CAAcC,MAAd,CAAqBN,WAArB,CAAJ,EAArB,CAAP,CACA;AACD,CARD,CAUA,GAAMO,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAAAC,SAAS,CAAI,CAC1B,GAAMV,CAAAA,OAAO,CAAGH,KAAK,CAACc,IAAN,CAAWb,OAAX,CAAoBY,SAApB,CAAhB,CACA,MAAOV,CAAAA,OAAO,CAACK,IAAR,CAAa,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAb,EAArB,CAAP,CACD,CAHD,CAKA,GAAMK,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACT,EAAD,CAAKO,SAAL,CAAmB,CAChC,GAAMV,CAAAA,OAAO,CAAGH,KAAK,CAACgB,GAAN,WAAaf,OAAb,aAAwBK,EAAxB,EAA8BO,SAA9B,CAAhB,CACA,MAAOV,CAAAA,OAAO,CAACK,IAAR,CAAa,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAb,EAArB,CAAP,CACD,CAHD,CAKA,GAAMO,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACX,EAAD,CAAQ,CACrB,GAAMH,CAAAA,OAAO,CAAGH,KAAK,CAACkB,MAAN,WAAgBjB,OAAhB,aAA2BK,EAA3B,EAAhB,CACA,MAAOH,CAAAA,OAAO,CAACK,IAAR,CAAa,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAb,EAArB,CAAP,CACD,CAHD,CAKA,cAAe,CAAER,MAAM,CAANA,MAAF,CAAUU,MAAM,CAANA,MAAV,CAAkBG,MAAM,CAANA,MAAlB,CAA0BE,MAAM,CAANA,MAA1B,CAAf","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  const nonExisting = {\r\n    id: 10000,\r\n    name: 'This Person is not saved to server',\r\n  }\r\n  return request.then(response => response.data.concat(nonExisting))\r\n  // return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update, remove}"]},"metadata":{},"sourceType":"module"}